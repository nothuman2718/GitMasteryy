"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[747],{4253:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>m,contentTitle:()=>o,default:()=>c,frontMatter:()=>s,metadata:()=>r,toc:()=>h});var i=n(4848),a=n(8453);const s={},o="The9%Stuff",r={id:"The9Stuff",title:"The9%Stuff",description:"Contains the commands which we use rarely or occasionally",source:"@site/docs/The9Stuff.md",sourceDirName:".",slug:"/The9Stuff",permalink:"/GitMasteryy/docs/The9Stuff",draft:!1,unlisted:!1,editUrl:"https://nothuman2718.github.io/GitMaster/docs/docs/The9Stuff.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"The90%Stuff",permalink:"/GitMasteryy/docs/The90Stuff"}},m={},h=[];function g(t){const e={code:"code",h1:"h1",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"the9stuff",children:"The9%Stuff"}),"\n",(0,i.jsxs)(e.p,{children:["Contains the commands which we use ",(0,i.jsx)(e.strong,{children:"rarely"})," or occasionally"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:'\ngit add *<pattern>* -u #Add all files to the staging area except the ones containing a specific pattern\ngit mv <old-file-name> <new-file-name> #Rename a file\n\n\ngit commit #Opens the default editor\n\n#Changing Commit History\ngit commit --amend #Change the last commit\ngit commit --amend -m "<new-commit-message>" #Change the last commit with a new message\ngit commit --amend --no-edit #Change the last commit without a new message\n\n\ngit diff --shortstat #View the changes in the working directory in a short format\ngit diff --stat #View the changes in the working directory in a short format\ngit diff --name-only #View the changes in the working directory in a short format\ngit diff --name-status #View the changes in the working directory in a short format\n\ngit rm --cached <file-name> #Remove a file from staging area only\n\ngit log --name-only #See the list of modified files in each commit\ngit log --name-status #See the list of modified files in each commit\ngit log --stat #See the list of modified files in each commit\n\n#Filtering History\ngit log --author="<author-name>" #Filter by author\ngit log --author="<author-name1>\\|<author-name2>"\n#Filter by time\ngit log --since="<date>"\ngit log --until="<date>"\ngit log --after="<date>"\ngit log --before="<date>"\ngit log --after="<date1>" --before="<date2>"\n\n#Filter by commit message keyword\ngit log --grep="<pattern>"\ngit log --grep="<pattern1>\\|<pattern2>"\ngit log -S"<keyword>" #Filter by content keyword\ngit log -- <file-name> #See all commits that modifed or deleted a file\n\ngit blame <file-name> #Finding author of the line\ngit blame -L<start>,<end> <file-name> #Specify range of line\ngit show --stat <commit-hash> #View the changes in a commit in a short format\ngit show --name-only <commit-hash> #View the changes in a commit in a short format\ngit show --name-status <commit-hash> #View the changes in a commit in a short format\n\ngit clean -fd #Clean all untracked files\ngit restore --source=HEAD~2 <file-name> #restore older version of file\n\n#Aliasing\ngit config --global alias.<alias-name> <command> #Create an alias\n\n#Bisect command\ngit bisect start\ngit bisect bad\ngit bisect good <commit-hash>\ngit bisect reset\n\n#Tagging\ngit tag <tag-name> #Create a tag\ngit tag -a <tag-name> -m "<tag-message>" #Create an annotated tag with a message\ngit tag -d <tag-name> #delete a tag\ngit push origin <tag-name> #push a tag to remote\ngit push origin --tags #push all tags to remote\ngit push origin --delete <tag-name> #delete a tag that is in origin\n\ngit branch -r #View remote branches\ngit branch -a #View all branches\ngit branch -v #View the branches in a short format\n\n#Stashing\ngit stash push -m "<stash-message>" #Stash the changes in the working directory\ngit stash save "<stash-message>" #Stash the changes in the working directory with a message\ngit stash list #View the stashes\ngit stash apply <stash-name> #Apply a stash\ngit stash show <stash-name> #View the changes in a stash\ngit stash pop <stash-name> #Apply a stash and remove it from the list\ngit stash drop <stash-name> #Remove a stash from the list\ngit stash clear #Clear all the stashes\n\n#Reverting Commits\ngit revert <commit-hash> #Revert a commit\ngit revert -e <commit-hash> #Revert a commit and edit the commit message\ngit revert --no-edit <commit-hash> #Revert a commit and skip the commit message\ngit revert -n <commit-hash1> <commit-hash2> #Revert multiple commits without creating multiple revert commits\n\n'})})]})}function c(t={}){const{wrapper:e}={...(0,a.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(g,{...t})}):g(t)}},8453:(t,e,n)=>{n.d(e,{R:()=>o,x:()=>r});var i=n(6540);const a={},s=i.createContext(a);function o(t){const e=i.useContext(s);return i.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function r(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:o(t.components),i.createElement(s.Provider,{value:e},t.children)}}}]);